name: on-pr-comment

on:
  push:
  pull_request:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  rocket:
    ## Just to react to valid comment with rocket
    runs-on: ubuntu-latest
    if: ${{ github.event.comment &&
          github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
    steps:
      -
        name: Show context
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(github) }}
          END
      - 
        name: Reaction
        run: |
          # send reaction to comment to show build was triggered
          curl ${{github.event.comment.url}}/reactions \
            -X POST \
            -d '{"content":"rocket"}' \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Authorization: token ${{github.token}}"

  prepare:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - run: echo 1111111;
      - run: echo hello; exit 1
        continue-on-error: true
      - run: xxx
        id: asd
        if: ${{false}}
      - run: echo 333333;
        if: steps.asd.outcome == 'skipped'
      - run: echo 44444;
        if: steps.asd.outcome != 'skipped'

  build:
    runs-on: ubuntu-latest
    ## Run on each event, but PR comment is checked for key phrase.
    if: ${{ github.event_name != 'issue_comment' ||
            ( github.event.issue.pull_request &&
            startsWith(github.event.comment.body, '/buildme') ) }}
    steps:
      -
        name: Show context
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(github) }}
          END
      -
        name: Show job
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(job) }}
          END
      -
        name: Show needs
        run: |
          cat >/dev/null <<'END'
            ${{ toJson(needs) }}
          END
      - #&step_detect_commented_pr
        name: REF and SHA of commented PR to ENV
        if: github.event.comment
        run: >
            curl -fsSL ${{github.event.issue.pull_request.url}}
            -H "Authorization: token ${{github.token}}" |
            jq -r '
              "PR_REF="+.head.ref, 
              "PR_SHA="+.head.sha, 
              "PR_NUM="+(.number|tostring), 
              "PR_REPO="+.head.repo.full_name' >>$GITHUB_ENV
      - #&step_checkout
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref:        ${{env.PR_REF}}  ## not empty on issue_comment, else default value GITHUB_REF
          repository: ${{env.PR_REPO}} ## not empty on issue_comment, else default value github.repository, required by forks
      -
        name: Show git log
        run: git log --decorate

  hello:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON('{"include":[]}') }}
        # a: [x]
        # include: ${{ fromJSON('[]') }}
    if: ${{ fromJSON('{"include":[]}').include[0] }}
    steps:
    - run: echo HALLELUAH \''${{ fromJSON('[]')[0] }}'\'
