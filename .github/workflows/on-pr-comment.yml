name: on_pr_comment

on:
  push:
  pull_request:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  job_comment_on_pr:
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ github.event.comment &&
          github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
    ## use as needs.job_comment_on_pr.outputs.triggered
    if: ${{ github.event.comment &&
          github.event.issue.pull_request &&
          startsWith(github.event.comment.body, '/buildme') }}
    steps:
      -
        name: Show context
        run: |
          cat <<'END'
            ${{ toJson(github) }}
          END
      - 
        name: GITHUB_ENV
        run: |
          echo COMMENT_ON_PULL_REQUEST=true                  >>$GITHUB_ENV
          curl ${{github.event.issue.pull_request.url}} |
            jq -r '"REF="+.head.ref, "SHA="+ .head.sha'      >>$GITHUB_ENV

          env
      - 
        name: Reaction
        run: |
          # send reaction to comment to show build was triggered
          curl ${{github.event.comment.url}}/reactions \
            -X POST \
            -d '{"content":"rocket"}' \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Authorization: token ${{github.token}}"

  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'issue_comment' ||
            ( github.event.issue.pull_request &&
            startsWith(github.event.comment.body, '/buildme') ) }}
    steps:
      - #&step_detect_pr
        name: REF and SHA of commented PR to ENV
        if: github.event.comment
        run: >
            curl -fsSL ${{github.event.issue.pull_request.url}}
            -H "Authorization: token ${{github.token}}" |
            jq -r '"PR_REF="+.head.ref, "PR_SHA="+.head.sha, "PR_NUM="+(.number|tostring), "PR_REPO="+.head.repo.full_name'
            >>$GITHUB_ENV
      - #&step_checkout
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref:        ${{env.PR_REF}}  ## not empty on issue_comment, else default value GITHUB_REF
          repository: ${{env.PR_REPO}} ## not empty on issue_comment, else default value github.repository
      -
        name: Show context
        run: |
          git log -1 --decorate
          cat <<'END'
            ${{ toJson(github) }}
          END
      -
        name: Show needs
        run: |
          cat <<'END'
            ${{ toJson(needs) }}
          END
